* Clase <2018-08-28 mar.>
  :PROPERTIES:
  :ID:       36f97be7-8eaf-4c6b-8fd1-7254a59640cf
  :END:


* Prueba de R
  :PROPERTIES:
  :ID:       8d2d88e4-cf7b-4bf9-b811-7ebb6040a93b
  :END:
  
* Secuencias
  :PROPERTIES:
  :ID:       83ab285d-dc72-422b-8085-d1e49e02ea51
  :END:
  

#+BEGIN_SRC R :results output org :exports results 

seq(from=1,to=4,by=1)
seq(stats::rnorm(20))
seq(1,4,2)
seq(1,9,2)
1:4

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 1 2 3 4
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
[1] 1 3
[1] 1 3 5 7 9
[1] 1 2 3 4
#+END_SRC

* Repeticiones
  :PROPERTIES:
  :ID:       75d7871c-b95c-4ecd-bf2d-86dc3db8fef1
  :END:
  


#+BEGIN_SRC R :results output org :exports results


rep(1,times=5)

rep(c(1,2),times=5,each=2)
rep(c(1,2),5,each=2)


#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 1 1 1 1 1
 [1] 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2
 [1] 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2
#+END_SRC

* Aleatorios
  :PROPERTIES:
  :ID:       4dab9808-e421-4595-90ac-e00add09a0d2
  :END:

#+BEGIN_SRC R


A <- runif(3)

A <- runif(3,0,10)

#+END_SRC

#+RESULTS:
| 4.31273924885318 |
| 8.89114164747298 |
| 7.88042935077101 |



* Ordenamiento
  :PROPERTIES:
  :ID:       8ddc90b2-7213-47e9-89e5-b7ed2e4f6f0c
  :END:
  
* Matrices
  :PROPERTIES:
  :ID:       199d3fb0-2b74-4576-ab44-c5d62a37aeb5
  :END:
  
** General
   :PROPERTIES:
   :ID:       b3d4e7f3-bcdc-4f47-a653-d6525078950b
   :END:

  #+BEGIN_SRC R :results output org :exports results 

matrix(1:5,5,3)
matrix(0,nrow=5,ncol=3)
matrix(runif(12),5,3)



#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    2    2    2
[3,]    3    3    3
[4,]    4    4    4
[5,]    5    5    5
     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
[3,]    0    0    0
[4,]    0    0    0
[5,]    0    0    0
            [,1]       [,2]      [,3]
[1,] 0.551505975 0.22439022 0.1776886
[2,] 0.477507558 0.09489634 0.1063603
[3,] 0.934678066 0.26219442 0.5515060
[4,] 0.009770388 0.70033707 0.4775076
[5,] 0.120844439 0.40468401 0.9346781
#+END_SRC


** Acceder a posiciones de la matriz
   :PROPERTIES:
   :ID:       c45f938a-33e2-4864-8290-805a326c490f
   :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  

B <- matrix(runif(12),4,3)

B[1,2]
B[,2]
B[1,]
c(B)


#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 0.1155057
[1] 0.1155057 0.7441514 0.9048496 0.1629292
[1] 0.9185008 0.1155057 0.1676409
 [1] 0.91850085 0.39400233 0.02981859 0.92416055 0.11550567 0.74415139
 [7] 0.90484963 0.16292921 0.16764094 0.09030709 0.69571948 0.90982541
#+END_SRC



** Cambios de acuerdo a una posicion
   :PROPERTIES:
   :ID:       7dced311-c7e7-4333-845a-f6e71001e36a
   :END:

#+BEGIN_SRC R :session nuevo

B[B<0.5] <- 0

B

#+END_SRC

#+RESULTS:
| 0.918500847183168 |                 0 |                0 |
|                 0 | 0.744151385035366 |                0 |
|                 0 | 0.904849631013349 | 0.69571947818622 |
| 0.924160549184307 |                 0 | 0.90982540557161 |



** Operaciones con matrices
   :PROPERTIES:
   :ID:       02397a75-790d-4750-832d-320486a7546a
   :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  

D <- matrix(runif(12),4,3)

C <- matrix(runif(12),3,4)

B %*% C

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
          [,1]      [,2]      [,3]      [,4]
[1,] 0.5505409 0.8728913 0.3541737 0.7693195
[2,] 0.1292553 0.6503636 0.5522874 0.1270483
[3,] 0.7549773 1.2994550 0.7879165 0.6504724
[4,] 1.3357172 1.5434511 0.5085303 1.4226873
#+END_SRC

* Operaciones estadisticas Basicas
  :PROPERTIES:
  :ID:       06e05c79-36cf-4c11-a3a7-3b0541c30e4b
  :END:


#+BEGIN_SRC R :session nuevo :results output org :exports results  


mean(B) 
colMeans(B)
rowMeans(B)
sd(B)
var(C)
sum(C)
colSums(C)



#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 0.4247673
[1] 0.4606653 0.4122503 0.4013862
[1] 0.3061669 0.2480505 0.5335230 0.6113287
[1] 0.4489292
            [,1]          [,2]        [,3]          [,4]
[1,]  0.11979398 -0.0204001191 -0.10044651  0.1038642783
[2,] -0.02040012  0.0123843085  0.01712766  0.0001346566
[3,] -0.10044651  0.0171276631  0.08422383 -0.0870449689
[4,]  0.10386428  0.0001346566 -0.08704497  0.1256998385
[1] 7.204024
[1] 1.632354 2.555419 1.295027 1.721225
#+END_SRC

* Comparaciones logicas
  :PROPERTIES:
  :ID:       35429b6e-391f-4084-a985-92267b7430f0
  :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  


a <- 1
b <- 2
a == 1
b != a
a < b
b > a
B<0.8
B==0.1
B!=0 

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] TRUE
[1] TRUE
[1] TRUE
[1] TRUE
      [,1]  [,2]  [,3]
[1,] FALSE  TRUE  TRUE
[2,]  TRUE  TRUE  TRUE
[3,]  TRUE FALSE  TRUE
[4,] FALSE  TRUE FALSE
      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,] FALSE FALSE FALSE
[3,] FALSE FALSE FALSE
[4,] FALSE FALSE FALSE
      [,1]  [,2]  [,3]
[1,]  TRUE FALSE FALSE
[2,] FALSE  TRUE FALSE
[3,] FALSE  TRUE  TRUE
[4,]  TRUE FALSE  TRUE
#+END_SRC

* Comparaciones en matrices
  :PROPERTIES:
  :ID:       3ccb9b6e-d9bc-44c8-92e2-c5f9b3f96418
  :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  

which(B>0.5)
all(B>1)
any(B<0.1)

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1]  1  4  6  7 11 12
[1] FALSE
[1] TRUE
#+END_SRC

* Determinaciones de Tipo
  :PROPERTIES:
  :ID:       7eb33a86-3f41-4749-aa3b-8206a21c7ba4
  :END:


#+BEGIN_SRC R :session nuevo :results output org :exports results  

a <- 1
is.number(a)

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
Error in isnumber(a) : no se pudo encontrar la función "isnumber"
#+END_SRC

* Nombrar vectores y matrices
  :PROPERTIES:
  :ID:       b548e62b-93fd-4e10-a45a-1e5b7aef1d6c
  :END:
* Listas
  :PROPERTIES:
  :ID:       c9e2c4c1-ee29-4041-95f3-dc7b8fddbf2b
  :END:

  #+BEGIN_SRC R
  l <- list(a=1,b=2,c=3)

  l$a
  #+END_SRC

  #+RESULTS:
  : 1

* Condicionales
  :PROPERTIES:
  :ID:       90642856-abf9-4111-a961-c73222ff00c6
  :END:

** IF - ELSE STATEMENT
   :PROPERTIES:
   :ID:       a0eba499-ce13-4061-b6c3-a0b863be5f95
   :END:


#+BEGIN_SRC R

if(1 < 2) {print(1)} else {print(2)}

x <- if (1 < 2) 1 else 2 

x <- ifelse(1<2,1,2)



#+END_SRC

#+RESULTS:
: 1


** Ciclos FOR
   :PROPERTIES:
   :ID:       7ef7010e-cf94-4b1a-ab18-e6f1891f6667
   :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  

for (i in 1:10){

if(i<=2) next

print(i)

if(i >=5) break

}

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 3
[1] 4
[1] 5
#+END_SRC


** Ciclo While
   :PROPERTIES:
   :ID:       8c1390d4-eae6-4086-984a-f10180184f89
   :END:

#+BEGIN_SRC   R :session nuevo :results output org :exports results  


i <- 1 

while (i<= 3) {

  print(i)
  i <- i +  1 

  


}

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 1
[1] 2
[1] 3
#+END_SRC


** Ciclo Repeat
   :PROPERTIES:
   :ID:       0be5afad-235f-4164-b311-b8f8fc3e99e2
   :END:

#+BEGIN_SRC  R :session nuevo :results output org :exports results  

i <- 1
repeat{

   if(i>5) {break}
   print(i)
   i <- i + 1


}

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
#+END_SRC

* Funciones
  :PROPERTIES:
  :ID:       3e005a29-69a2-4db1-84a4-71b75e2ae13b
  :END:
  #+BEGIN_SRC R :session nuevo :results output org :exports results  

  fact <- function(n=4)

  {
  
  if ( n == 0 || n ==1 )
     return(1)

  else
     return ( n * fact(n-1))
  


}

fact(5)



  #+END_SRC

  #+RESULTS:
  #+BEGIN_SRC org
  [1] 120
  #+END_SRC
  


  #+BEGIN_SRC R :session nuevo :results output org :exports results  

squares <- function(x){

   return (sum(X ^ 2))
}



  
  #+END_SRC

  #+RESULTS:
  #+BEGIN_SRC org
  #+END_SRC

* Graficas
  :PROPERTIES:
  :ID:       3861a209-2c15-4891-a71c-9cd8f0130e20
  :END:

#+BEGIN_SRC R :session nuevo :results output org :exports results  

x <- seq(from = 0 , to = 20 , by =0.1)

y <- exp(-x/10) * cos(2*x)

plot(x,y,type = "l")

#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
#+END_SRC

* Ejercicio en clase 
  :PROPERTIES:
  :ID:       b55ff863-d32e-4304-a02a-e90202e39715
  :END:
  



#+BEGIN_SRC R :session nuevo :results output org :exports results  
 


  maximo <- function(datos)

  {}


maximo(volcano)


#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
[1] 148 149 153
#+END_SRC

#+BEGIN_SRC R :session nuevo :results output graphics :file test.png

require(grDevices); require(graphics)
filled.contour(volcano, color.palette = terrain.colors, asp = 1)
title(main = "volcano data: filled contour map")

#+END_SRC

#+RESULTS:
[[file:test.png]]

* Definicion de Heurisicas
  :PROPERTIES:
  :ID:       2689cea8-b671-4a07-8135-87e14370a3d7
  :END:

  Descubrir o formas de descubrir los procesos asociados a la mente.
